{
  "name": "ani-vscode",
  "displayName": "Ani VSCode",
  "description": "VSCode extension that gives you a little AI assistant in your code editor.",
  "version": "0.0.1",
  "publisher": "local",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/ani-vscode.git"
  },
  "contributes": {
    "commands": [
      {
        "command": "ani-vscode.showPanel",
        "title": "Ani: Show Assistant Panel"
      }
    ],
    "configuration": {
      "title": "Ani VSCode",
      "properties": {
        "ani-vscode.transparentBackground": {
          "type": "boolean",
          "default": true,
          "description": "Render the viewer with a transparent background."
        },
        "ani-vscode.character": {
          "type": "string",
          "enum": [
            "Hiyori",
            "Mao"
          ],
          "default": "Mao",
          "description": "Which character model to load."
        },
        "ani-vscode.llm.baseUrl": {
          "type": "string",
          "default": "http://localhost:11434/v1/",
          "description": "Base URL for an OpenAI-compatible chat completion API."
        },
        "ani-vscode.llm.apiKey": {
          "type": "string",
          "default": "dummy",
          "markdownDescription": "API key for the LLM provider (stored in settings).",
          "description": "API key for the LLM provider."
        },
        "ani-vscode.llm.model": {
          "type": "string",
          "default": "gemma3:12b-it-qat",
          "description": "Model name for the OpenAI-compatible API (e.g. gpt-4.1-mini)."
        },
        "ani-vscode.llm.fastModel": {
          "type": "string",
          "default": "gemma3:1b-it-qat",
          "description": "Fast model name for expression generation (e.g. gpt-4.1-nano). Leave empty to disable expression animations."
        },
        "ani-vscode.llm.minIntervalSeconds": {
          "type": "number",
          "default": 10,
          "minimum": 10,
          "description": "Minimum seconds between LLM requests. Enforced minimum is 10 seconds."
        },
        "ani-vscode.llm.maxHistory": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "description": "Maximum number of messages to keep in chat history (including system message)."
        },
        "ani-vscode.tts.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable text-to-speech playback for LLM responses."
        },
        "ani-vscode.tts.baseUrl": {
          "type": "string",
          "default": "https://api.openai.com/v1",
          "description": "Base URL for an OpenAI-compatible text-to-speech API."
        },
        "ani-vscode.tts.apiKey": {
          "type": "string",
          "default": "dummy",
          "markdownDescription": "API key for the text-to-speech provider (stored in settings).",
          "description": "API key for the text-to-speech provider."
        },
        "ani-vscode.tts.model": {
          "type": "string",
          "default": "gpt-4o-mini-tts",
          "description": "Model name for the OpenAI-compatible text-to-speech API."
        },
        "ani-vscode.tts.voice": {
          "type": "string",
          "default": "marin",
          "description": "Voice name to request from the text-to-speech API."
        },
        "ani-vscode.tts.pitchRatio": {
          "type": "number",
          "default": 1.2,
          "minimum": 0.5,
          "maximum": 1.5,
          "description": "Pitch multiplier applied after synthesis (1.0 = original pitch). Higher values sound brighter."
        },
        "ani-vscode.tts.playbackRate": {
          "type": "number",
          "default": 1,
          "minimum": 0.5,
          "maximum": 1.1,
          "description": "Playback speed multiplier. Leave at 1.0 to keep natural timing."
        },
        "ani-vscode.plugins.codeReview.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the Code Review plugin that analyzes and roasts your code."
        },
        "ani-vscode.plugins.codeReview.weight": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "description": "Weight for Code Review plugin selection (higher = more likely to trigger). Default: 1.0"
        },
        "ani-vscode.plugins.hackerNews.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the HackerNews plugin that fetches top articles and asks the AI to comment."
        },
        "ani-vscode.plugins.hackerNews.weight": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "description": "Weight for HackerNews plugin selection (higher = more likely to trigger). Default: 1.0"
        },
        "ani-vscode.plugins.rssFeed.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the RSS Feed plugin that fetches articles from configured RSS feeds and asks the AI to summarize."
        },
        "ani-vscode.plugins.rssFeed.weight": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "description": "Weight for RSS Feed plugin selection (higher = more likely to trigger). Default: 1.0"
        },
        "ani-vscode.plugins.rssFeed.feeds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "https://www.channelnewsasia.com/api/v1/rss-outbound-feed?_format=xml"
          ],
          "description": "List of RSS feed URLs to fetch articles from. The plugin will randomly select one feed each time it triggers."
        },
        "ani-vscode.plugins.weather.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the Weather plugin that keeps an eye on local conditions and only speaks up when the weather meaningfully changes."
        },
        "ani-vscode.plugins.weather.weight": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "description": "Weight for Weather plugin selection (higher = more likely to trigger). Default: 1.0"
        },
        "ani-vscode.plugins.weather.location": {
          "type": "string",
          "default": "Singapore",
          "description": "Location to monitor for weather changes. You can use a city name (resolved via Open-Meteo geocoding) or provide coordinates as latitude,longitude."
        },
        "ani-vscode.plugins.weather.cacheMinutes": {
          "type": "number",
          "default": 30,
          "minimum": 30,
          "description": "How long (in minutes) to cache weather responses before hitting the API again. Minimum 30 minutes."
        },
        "ani-vscode.plugins.screenshot.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable the Screenshot plugin that captures your workspace and asks the AI to comment on it. Requires a vision-capable model (e.g., gpt-4o, gpt-4-vision-preview)."
        },
        "ani-vscode.plugins.screenshot.weight": {
          "type": "number",
          "default": 2,
          "minimum": 0,
          "description": "Weight for Screenshot plugin selection (higher = more likely to trigger). Default: 2.0"
        },
        "ani-vscode.plugins.periodicIntervalMinutes": {
          "type": "number",
          "default": 1,
          "minimum": 0.5,
          "description": "How often (in minutes) a random plugin should automatically trigger. Set to 0 to disable periodic triggers."
        },
        "ani-vscode.quickReplies.enabled": {
          "type": "boolean",
          "default": false,
          "description": "(Experimental) Enable quick reply suggestions from the AI."
        },
        "ani-vscode.debugPanel": {
          "type": "boolean",
          "default": false,
          "description": "Show the motion debug panel on the left side of the webview. This panel allows you to manually trigger model motions for testing."
        }
      }
    }
  },
  "scripts": {
    "compile": "node ./scripts/build-extension.mjs",
    "compile:win": "node ./scripts/build-extension.mjs",
    "watch": "tsc -w -p .",
    "typecheck": "tsc -p . --noEmit",
    "prepublish": "npm run build",
    "build": "node -e \"process.platform === 'win32' ? process.exit(0) : process.exit(1)\" && npm run build:win || npm run build:unix",
    "build:unix": "npm run compile && cd webview && npm install --no-audit --no-fund && npm run build",
    "build:win": "npm run compile:win && cd webview && npm install --no-audit --no-fund && npm run build",
    "package": "npm run build && npx @vscode/vsce package",
    "postinstall": "cd webview && npm install --no-audit --no-fund && npm run build"
  },
  "devDependencies": {
    "@types/node": "^22.5.2",
    "@types/pixelmatch": "^5.2.6",
    "@types/pngjs": "^6.0.5",
    "@types/vscode": "^1.85.0",
    "@vscode/vsce": "^3.0.0",
    "esbuild": "^0.24.0",
    "typescript": "^5.5.4"
  },
  "license": "SEE LICENSE IN LICENSE.md",
  "dependencies": {
    "@langchain/core": "^0.3.77",
    "@langchain/openai": "^0.6.13",
    "@vscode/extension-telemetry": "^1.0.0",
    "pixelmatch": "^6.0.0",
    "pngjs": "^7.0.0"
  }
}
